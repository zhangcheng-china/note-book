(window.webpackJsonp=window.webpackJsonp||[]).push([[496],{1580:function(t,a,s){"use strict";s.r(a);var r=s(20),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"java"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[t._v("#")]),t._v(" JAVA")]),t._v(" "),s("h2",{attrs:{id:"jdk-性能、有用工具记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk-性能、有用工具记录"}},[t._v("#")]),t._v(" jdk 性能、有用工具记录")]),t._v(" "),s("ol",[s("li",[t._v("jmh ：专门用于代码微基准测试的工具套件")])]),t._v(" "),s("p",[t._v("JMH比较典型的应用场景有：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- 想准确的知道某个方法需要执行多长时间，以及执行时间和输入之间的相关性；\n- 对比接口不同实现在给定条件下的吞吐量；\n- 查看多少百分比的请求在多长时间内完成；\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[t._v("JProfiler")])]),t._v(" "),s("li",[s("p",[t._v("JConsole ：它用于对JVM中内存，线程和类等的监控")])]),t._v(" "),s("li",[s("p",[t._v("VisualVM ：")]),t._v(" "),s("p",[t._v("能够监控线程，内存情况，查看方法的CPU时间和内存中的对象，\n已被GC的对象，反向查看分配的堆栈(如100个String对象分别由哪几个对象分配出来的).")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);