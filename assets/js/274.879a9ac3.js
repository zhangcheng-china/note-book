(window.webpackJsonp=window.webpackJsonp||[]).push([[274],{1449:function(s,t,a){"use strict";a.r(t);var e=a(20),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_184-商品详情页动态渲染系统-twemproxy-hash-tag-mget-优化思路介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_184-商品详情页动态渲染系统-twemproxy-hash-tag-mget-优化思路介绍"}},[s._v("#")]),s._v(" 184. 商品详情页动态渲染系统：twemproxy hash tag + mget 优化思路介绍")]),s._v(" "),a("p",[s._v("用 twemproxy 其实就是将 Redis 集群做成了很多个分片，相当于是部署了很多个 redis 主实例，\n通过 twemproxy 中间件，将数据散列存储到多个 redis 实例中去，每个 redis 实例中存储一部分的数据")]),s._v(" "),a("p",[s._v("之前在商品聚合服务中（eshop-dataaggr-service）使用了 mget 来优化一次获取多个 key 的操作，如下的 key")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("product_1\nproduct_property_1\nproduct_specification_1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这里在 twemproxy 中来说就会存在一个问题，这三个 key 可能会散列到多个 redis 中去，\n所以就会走多次网络才能拿到这三个数据。")]),s._v(" "),a("p",[s._v("那么这里可以使用 hash tag 这个功能来让这三个 key 落到同一个 redis 分片上去")]),s._v(" "),a("p",[s._v("vi conf/nutcracker.yml")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis-master")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置一个逻辑名称")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# listen: 127.0.0.1:1111")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 192.168.99.11"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" fnv1a_64\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hash_tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"::"')]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 增加此配置")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("distribution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ketama\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("servers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 192.168.99.11"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6401"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1 redis01  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指向两个主集群")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 192.168.99.11"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6402"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1 redis02\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("那么在读写的时候就要使用如下的 key 形式来让 hash_tag 生效")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("product:1:\nproduct_property:1:\nproduct_specification:1:\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这样一来，读写都会使用 :中间: 的字符串来计算 hash 值，就能落地到同一个分片上去了")])])}),[],!1,null,null,null);t.default=n.exports}}]);